module TestBinary = struct

  val check : fun({binary, binary, binary, binary}) -> {binary, binary, binary, binary} = external 1 ```
    check({A, B, C, D}) ->
      <<240,159,145,169,226,128,141,240,159,148,172>> = A,
      <<"👩‍🔬"/utf8>> = A,
      <<8,127,27,12,10,13,32,9,11,88,65,194,170,10,1,1,39,34,92>> = B,
      <<"\b\d\e\f\n\r\s\t\v\XA\xAA\x{A}\^a\^A\'\"\\"/utf8>> = B,
      <<33,34,39,96,92,92>> = C,
      <<"!\"\'`\\\\"/utf8>> = C,
      <<111,110,101,10,116,119,111>> = D,
      <<"one\ntwo"/utf8>> = D,
      {A, B, C, D}.
    ```

  val main(args) =
    let woman_scientist = "👩‍🔬" in
    let escape_sequences = "\b\d\e\f\n\r\s\t\v\XA\xAA\x{A}\^a\^A\'\"\\" in
    let raw = ``!"'`\\`` in
    let multiline = ```
one
two```
    in
    let examples = {woman_scientist, escape_sequences, raw, multiline} in
    print_debug(check(examples))

end
