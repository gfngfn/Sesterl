
letrec foldl(f, i, l) =
  case l of
  | []      -> i
  | x :: xs -> foldl(f, f(i, x), xs)
  end

let sum(ns) =
  foldl(fun(m, n) -> m + n, 0, ns)

let main() =
  sum(3 :: 1 :: 4 :: 1 :: 5 :: 9 :: 2 :: [])
