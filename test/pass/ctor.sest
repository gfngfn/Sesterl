module Ctor = struct

  module Sub = struct
    type t =
      | Foo
      | Bar(int)
  end

  val to_int(x) =
    case x of
    | Sub.Foo    -> 0
    | Sub.Bar(n) -> n
    end

  val is_foo_and_bar(xs) =
    case xs of
    | [Sub.Foo, Sub.Bar(_)] -> true
    | _                     -> false
    end

  val main(_) =
    let _ =
      print_debug([
        to_int(Sub.Bar(42)),
        to_int(Sub.Bar(0)),
        to_int(Sub.Foo),
      ])
    in
    print_debug([
      is_foo_and_bar([]),
      is_foo_and_bar([Sub.Foo, Sub.Bar(42)]),
      is_foo_and_bar([Sub.Foo]),
    ])

end
