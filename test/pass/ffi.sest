module Ffi = struct

  type option<$a> =
    | None
    | Some($a)

  val assoc<$a> : fun(int, list<{int, $a}>) -> option<{$a, list<{int, $a}>}> = external 2 ```
assoc(Key, Xs) ->
    case lists:keytake(Key, 1, Xs) of
        false                 -> none;
        {value, {_, V}, Rest} -> {some, {V, Rest}}
    end.
  ```

  val main(args) =
    let ans =
      assoc(1, [
        {3, "Komaba"},
        {1, "Hongo"},
        {4, "Yayoi"},
        {1, "Asano"},
        {5, "Kashiwa"},
      ])
    in
    print_debug(ans)
end
