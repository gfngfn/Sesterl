module Functor2 = struct

  signature S = sig
    type t :: o
    val zero : fun() -> t
  end

  module F = fun(X : S) -> struct
    val f(x : X.t) : X.t = x
    val zeroes() = {X.zero(), X.zero()}
  end

  module Int = struct
    type t = int
    val zero() = 0
  end

  module M = F(Int)

  val main(_) =
    print_debug(M.zeroes())

end
