module TestWith = struct

  module Impl1 = struct
    type t = int
  end

  module Api1 = Impl1 :> (sig
    type t
  end with type t = int)

  module Impl2 = struct
    module M = struct
      type t = int
    end
  end

  module Api2 = Impl2 :> (sig
    module M : sig
      type t
    end
  end with M type t = int)

  module Impl3 = struct
    type t =
      | Foo(int)
      | Bar(binary)
  end

  module Api3 = Impl3 :> (sig
    type t :: o
  end with
    type t =
      | Foo(int)
      | Bar(binary)
  )

  let main(arg) =
    let res = Api3.Foo(1) in
    print_debug(res)

end
