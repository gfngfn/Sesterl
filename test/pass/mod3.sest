module Mod3 = struct

  module List = struct
    type t<$a> = list<$a>

    val empty<$b>() : t<$b> =
      []

    val rec foldl(f, i, l) =
      case l of
      | []      -> i
      | x :: xs -> foldl(f, f(i, x), xs)
      end

    val reverse<$c>(xs : list<$c>) : list<$c> =
      foldl(fun(acc, x) -> x :: acc, [], xs)
  end

  signature Eq = sig
    type t :: o
    val equal : fun(t, t) -> bool
  end

end
