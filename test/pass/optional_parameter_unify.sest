module OptionalParameterUnify = struct

  val f1(g) = g(?foo 42)

  val f2(g) = g(?foo 42, ?bar true)

  val f(flag, g) = if flag then f1(g) else f2(g)

  val main(_) =
    let h(?foo nopt, ?bar binopt) =
      case {nopt, binopt} of
      | {None, _}          -> false
      | {Some(n), None}    -> n > 0
      | {Some(n), Some(b)} -> n > 0 && b
      end
    in
    let res = f(true, h) in
    print_debug(res)

end
